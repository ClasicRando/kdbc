package io.github.clasicrando.kdbc.postgresql.message.encoders

import io.github.clasicrando.kdbc.core.buffer.ByteWriteBuffer
import io.github.clasicrando.kdbc.core.message.MessageEncoder
import io.github.clasicrando.kdbc.postgresql.message.PgMessage

/**
 * [MessageEncoder] for [PgMessage.CancelRequest]. This message is sent as the only messages in a
 * TCP connection to ask the backend to cancel an ongoing request in another connection. Contents
 * are:
 * - the length of the following data (including the size of the [Int] length)
 * - an int value split into the highest (1234) and lowest (5678) bits
 * - an [Int] as the process ID of the target backend
 * - an [Int] as the secret key generated by the target backend
 *
 * [docs](https://www.postgresql.org/docs/current/protocol-message-formats.html#PROTOCOL-MESSAGE-FORMATS-CANCELREQUEST)
 */
internal object CancelRequestEncoder : MessageEncoder<PgMessage.CancelRequest> {
    override fun encode(
        value: PgMessage.CancelRequest,
        buffer: ByteWriteBuffer,
    ) {
        buffer.writeInt(16)
        buffer.writeShort(1234)
        buffer.writeShort(5678)
        buffer.writeInt(value.processId)
        buffer.writeInt(value.secretKey)
    }
}
